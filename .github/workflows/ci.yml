# 发布项目到自己的服务器上的配置
name: DeployServer
# on 表示触发actions的条件
on:
  push:
    branches: [master] # main分支在push的时候会触发

jobs:
  # 定义了一个job 名字为ci
  ci:
    # 使用GitHub提供给我们的机器跑环境
    name: 部署到服务器上
    runs-on: ubuntu-latest # nodejs执行的操作系统
    steps:
      # 拉去最新的代码
      - name: 更新代码/获取源码
        uses: actions/checkout@v4 # 拉取你的最新代码
      # 在机器上安装node
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # 指定你的node版本
      # 为node_modules设置缓存
      - name: Cache
      # 缓存命中结果会存储在steps.[id].outputs.cache-hit里，该变量在继后的step中可读
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          # 缓存文件目录的路径
          path: |
            **/node_modules
          key: ${{runner.OS}}
      # 安装依赖
      - name: Installing Dependencies
        # 如果命中缓存，就不需要安装依赖，使用缓存即可
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          npm install -g pnpm
          cd ./packages/blog
          pnpm install
      # 打包
      - name: Build
        run: |
          pnpm run build
          zip -r vitepress ./docs/.vitepress/dist
      # 产物上传到服务器
      - name: Upload to Deploy Server
        # uses: wangyucode/sftp-upload-action@24f8bb83383dc39bed201ee5da01475e6c38c568
        uses: wangyucode/sftp-upload-action@v2.0.2
        with:
          host: ${{ secrets.SERVER_IP }} # 你的nginx服务器公网ip
          port: ${{ secrets.SERVER_PORT }} # 你的nginx服务器ssh端口
          username: ${{ secrets.USERNAME }} # 你的nginx服务器用户名
          password: ${{ secrets.PASSWORD }} # 你的nginx服务器密码
          localDir: vitepress # 你vue项目build好的文件的路径,每次服务器上会自动删除对应的文件夹后重新覆盖
          remoteDir: ${{ secrets.SERVER_DESTINATION }} # 你要把你build好的文件夹放到nginx服务器上的什么位置，一般都是nginx配置的站点路径
