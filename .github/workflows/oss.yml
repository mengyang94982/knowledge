# workflow的名称，会显示在工作流运行页面
name: upload to Ali OSS
# 触发事件：push到master分支的时候出发这个工作流
# on: [push]不区分分支
on:
  push:
    branches:
      - master
jobs:
  # 第一个job名称
  deploy:
    name: 部署到阿里云对象存储
    # 部署的一个虚拟环境
    runs-on: ubuntu-latest
    # 步骤 可以有多个步骤
    steps:
      - name: 更新代码/获取源码
        # uses是使用action的意思 我们可以使用别人编号的action引入到这里直接使用，不用自己再书写
        # actions/checkout@master actions开头的是官方编写的action 这个action的意思是获取到源码
        # 如果想查找别人写好的action 可以去官方的action市场查找：https://github.com/marketplace?type=actions
        uses: actions/checkout@master

      - name: 安装Node
        # 在我们上面runs-on部署的虚拟环境上安装node 后面的@v3 是第三个版本 v1是node12版本 v2是16版本 当前我本地使用的是18版本，所以用的v3,如果以后版本不合适了请前往上面的官方action库查找有没有v4 v5版本
        uses: actions/setup-node@v3
        with:
          # 锁定下node版本
          node-version: '18'

      - name: 构建HTML
        # 这里就是安装依赖 执行build打包，这里的要和package.json定义的scripts名称一致，如果是docs:build的话 请修改下面命令
        run: |
          npm install -g pnpm
          cd ./packages/blog
          pnpm i
          pnpm run build

      - name: 连接OSS
        # 使用别人写好的连接oss的action
        uses: manyuanrong/setup-ossutil@v3.0
        with:
          # 地域节点，在控制台查看
          # https://help.aliyun.com/zh/oss/user-guide/regions-and-endpoints
          endpoint: oss-cn-hongkong.aliyuncs.com
          # 这里就是我们刚才在仓库的Secrets and variables里面设置的id和secret名字，设置的时候定义的什么名字 这里就用什么
          access-key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}

      - name: 发布到OSS
        # 固定的写法 ossutil cp -rf 要上传的文件夹 oss://存储桶名字
        run: ossutil cp -rf packages/blog/docs/.vitepress/dist/ oss://vitepress-blog
